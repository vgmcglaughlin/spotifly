{"version":3,"sources":["scripts/app-6f5650b655.js"],"names":[],"mappings":"AAAA,CAAC,WAAW;EACV;;EAEA;KACG,OAAO,OAAO,CAAC;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;;;;AAKN,CAAC,YAAY;EACX;;;EAEA;KACG,OAAO;KACP,WAAW,kBAAkB;;;EAGhC,SAAS,eAAe,SAAS;IAC/B,IAAI,KAAK;;IAET,GAAG,SAAS;MACV,MAAM;;;IAGR,GAAG,SAAS,UAAU,QAAQ;MAC5B,QAAQ,OAAO,OAAO,OAAO,OAAO,MAAM,KAAK,UAAU,SAAS;QAChE,GAAG,QAAQ,QAAQ,OAAO;;;;;;AAMlC,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,OAAO;;;EAGV,SAAS,aAAa,gBAAgB;IACpC;OACG,MAAM,SAAS;QACd,KAAK;QACL,aAAa;;;;;;AAMrB,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,OAAO;;;EAGV,SAAS,aAAa,gBAAgB;IACpC;OACG,MAAM,SAAS;QACd,KAAK;QACL,aAAa;QACb,YAAY;QACZ,cAAc;;;;;;AAMtB,CAAC,YAAY;EACX;;;EAEA;KACG,OAAO;KACP,WAAW,mBAAmB;;;EAGjC,SAAS,gBAAgB,SAAS,QAAQ,cAAc,MAAM;IAC5D,IAAI,KAAK;;IAET,IAAI,CAAC,aAAa,IAAI;MACpB,OAAO,OAAO,GAAG;;;IAGnB,QAAQ,eAAe,aAAa,IAAI,KAAK,UAAU,SAAS;MAC9D,GAAG,SAAS,QAAQ;MACpB;;;IAGF,GAAG,cAAc,YAAY;MAC3B,GAAG,OAAO;MACV;;;IAGF,SAAS,iBAAiB;MACxB,IAAI,WAAW,GAAG,OAAO,IAAI,UAAU,OAAO;QAC5C,OAAO,MAAM;SACZ,KAAK;;MAER,GAAG,cAAc,KAAK,mBAAmB,iEAAiE;;;;;AAKhH,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,IAAI;;;EAGP,SAAS,SAAS,MAAM,SAAS,QAAQ;IACvC,KAAK,MAAM;;IAEX,QAAQ,iBAAiB,KAAK,UAAU,MAAM;MAC5C,KAAK,MAAM,gBAAgB;OAC1B,MAAM,UAAU,KAAK;MACtB,KAAK,MAAM,8BAA8B;MACzC,OAAO,GAAG;;;;;AAKhB,CAAC,WAAW;EACV;;;EAEA;KACG,OAAO;KACP,OAAO;;;EAGV,SAAS,aAAa,gBAAgB,oBAAoB;IACxD;OACG,MAAM,QAAQ;QACb,KAAK;QACL,aAAa;QACb,YAAY;QACZ,cAAc;;;IAGlB,mBAAmB,UAAU;;;;;AAKjC,CAAC,UAAU,QAAQ;EACjB;;;EAEA;KACG,OAAO;KACP,OAAO;;;EAGV,SAAS,OAAO,cAAc,iBAAiB;;IAE7C,aAAa,aAAa;;;;;;;IAO1B,IAAI,aAAa;IACjB,IAAI,WAAW,cAAc;;MAE3B,gBAAgB,aAAa,WAAW;;;;EAI5C,SAAS,gBAAgB;IACvB,IAAI,aAAa;IACjB,IAAI,GAAG,IAAI;QACP,IAAI,OAAO,SAAS,KAAK,UAAU;IACvC,QAAQ,IAAI,EAAE,KAAK,IAAI;OACpB,WAAW,EAAE,MAAM,OAAO,mBAAmB,EAAE;;IAElD,OAAO;;;GAGR;;AAEH,QAAQ,OAAO,OAAO,IAAI,CAAC,kBAAkB,SAAS,gBAAgB,CAAC,eAAe,IAAI,wBAAwB;AAClH,eAAe,IAAI,uBAAuB;AAC1C,eAAe,IAAI,qBAAqB,6lBAA6lB","file":"scripts/app-6f5650b655.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('app', ['ngAnimate',\n      'ngCookies',\n      'ngTouch',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'ngResource',\n      'ui.router',\n      'spotify'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(Spotify) {\n    var vm = this;\n\n    vm.params = {\n      type: 'album' // album, artist, playlist, or track\n    };\n\n    vm.search = function (params) {\n      Spotify.search(params.query, params.type).then(function (results) {\n        vm.items = results.albums.items;\n      });\n    };\n  }\n}());\n\n(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider) {\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'app/login/login.html'\n      });\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider) {\n    $stateProvider\n      .state('album', {\n        url: '/albums/:id',\n        templateUrl: 'app/albums/album.html',\n        controller: 'AlbumController',\n        controllerAs: 'vm'\n      });\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('AlbumController', AlbumController);\n\n  /** @ngInject */\n  function AlbumController(Spotify, $state, $stateParams, $sce) {\n    var vm = this;\n\n    if (!$stateParams.id) {\n      return $state.go('main');\n    }\n\n    Spotify.getAlbumTracks($stateParams.id).then(function (results) {\n      vm.tracks = results.items;\n      createPlaylist();\n    });\n\n    vm.updateOrder = function () {\n      vm.tracks.reverse();\n      createPlaylist();\n    };\n\n    function createPlaylist() {\n      var trackIds = vm.tracks.map(function (track) {\n        return track.id;\n      }).join(',');\n\n      vm.playlistUri = $sce.trustAsResourceUrl('https://embed.spotify.com/?uri=spotify:trackset:Hello World:' + trackIds);\n    }\n  }\n}());\n\n(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, Spotify, $state) {\n    $log.debug('runBlock end');\n\n    Spotify.getCurrentUser().then(function (user) {\n      $log.debug('current user', user);\n    }).catch(function (err) {\n      $log.debug('error getting current user', err);\n      $state.go('login');\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n(function (window) {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, SpotifyProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Necessary if you use the client-side login flow\n    // SpotifyProvider.setClientId('id');\n    // SpotifyProvider.setRedirectUri('http://localhost:5000/callback');\n    // SpotifyProvider.setScope('user-read-private user-read-email');\n\n    var hashParams = getHashParams();\n    if (hashParams.access_token) {\n      // If you already have an auth token\n      SpotifyProvider.setAuthToken(hashParams.access_token);\n    }\n  }\n\n  function getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = window.decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n})(window);\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/albums/album.html\",\"<div class=\\\"row\\\"><div class=\\\"small-12 columns\\\"><label>Reverse order <input type=\\\"checkbox\\\" ng-model=\\\"vm.reverseOrder\\\" ng-change=\\\"vm.updateOrder()\\\"></label></div></div><div class=\\\"row align-middle\\\" ng-repeat=\\\"track in vm.tracks | orderBy:track_number\\\"><div class=\\\"small-12 columns\\\"><span ng-bind=\\\"track.track_number\\\"></span> <span ng-bind=\\\"track.name\\\"></span></div></div><div class=\\\"row\\\"><div class=\\\"small-12 columns\\\"><iframe ng-attr-src=\\\"{{ vm.playlistUri }}\\\" frameborder=\\\"0\\\" allowtransparency=\\\"true\\\"></iframe></div></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"row\\\"><div class=\\\"small-12 columns\\\"><a href=\\\"/login\\\" class=\\\"primary button\\\">Log in with Spotify</a></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"row\\\"><div class=\\\"small-12 columns\\\"><form novalidate=\\\"\\\" name=\\\"vm.searchForm\\\" ng-submit=\\\"vm.search(vm.params)\\\"><label>Album Name <input type=\\\"text\\\" ng-model=\\\"vm.params.query\\\" ng-change=\\\"vm.search(vm.params)\\\" ng-model-options=\\\"{debounce: 300}\\\"></label></form></div><div><div class=\\\"row align-middle\\\" ng-repeat=\\\"item in vm.items\\\" ui-sref=\\\"album({id: item.id})\\\"><div class=\\\"small-3 medium-2 large-1 columns\\\"><img ng-src=\\\"{{ item.images[0].url }}\\\"></div><div class=\\\"small-9 medium-10 large-11 columns\\\"><span ng-bind=\\\"item.name\\\"></span></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}